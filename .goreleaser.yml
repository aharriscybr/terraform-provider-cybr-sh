# all available options: https://goreleaser.com/customization/

version: 2
project_name: terraform-provider-cybr-sh

before:
  hooks: []

builds:
  - binary: terraform-provider-cybr-sh_v{{.Env.SECRETSHUB_VERSION}}
    env:
      - CGO_ENABLED=0
    goos:
      - darwin  # MacOS
      - windows
      - linux
    goarch:
      - amd64
    ldflags:
      - '-s -w -X main.version={{.Env.SECRETSHUB_VERSION}} -X main.commit={{.Commit}}'

  # Apple silicon support
  - id: terraform-provider-cybr-sh-arm
    binary: terraform-provider-cybr-sh_v{{.Env.SECRETSHUB_VERSION}}
    env:
      - CGO_ENABLED=0
    goos:
      - darwin  # MacOS
    goarch:
      - arm64
    ldflags:
      - '-s -w -X main.version={{.Env.SECRETSHUB_VERSION}} -X main.commit={{.Commit}}'

archives:
  - id: secretshub-terraform-release-archive
    name_template: "{{ .ProjectName }}_{{ .Env.SECRETSHUB_VERSION }}_{{ .Os }}_{{ .Arch }}"
    format: zip
    files:
      - README.md
      - LICENSE

checksum:
  name_template: "{{.ProjectName}}_{{.Env.SECRETSHUB_VERSION}}_SHA256SUMS"

brews:
  - description: Terraform provider for Secretshub
    homepage: https://github.com/aharriscybr/terraform-provider-cybr-sh
    url_template: https://github.com/aharriscybr/terraform-provider-cybr-sh/releases/download/v{{.Env.SECRETSHUB_VERSION}}/{{.ProjectName}}_{{.Env.SECRETSHUB_VERSION}}_{{.Os}}_{{.Arch}}.zip
    caveats: |
      After installation, you must symlink the provider into Terraform's plugins directory.
      Symlinking is necessary because Homebrew is sandboxed and cannot write to your home directory.

      # Make the plugins directory if not present
      mkdir -p ~/.terraform.d/plugins/

      # Remove any old unversioned plugins (if applicable)
      rm -f  ~/.terraform.d/plugins/terraform-provider-cybr-sh

      # Symlink the provider to your home dir. If Homebrew is installing somewhere other than /usr/local/Cellar, update the path as well.
      ln -sf /usr/local/Cellar/terraform-provider-cybr-sh/{{.Env.SECRETSHUB_VERSION}}/bin/terraform-provider-cybr-sh_v{{.Env.SECRETSHUB_VERSION}} ~/.terraform.d/plugins/terraform-provider-cybr-sh_v{{.Env.SECRETSHUB_VERSION}}
    dependencies:
      - terraform
    install: |
      bin.install "terraform-provider-cybr-sh_v{{.Env.SECRETSHUB_VERSION}}"
    test: |
      # Running bin directly gives error, exit code 1
      system "#{bin}/terraform-provider-cybr-sh_v{{.Env.SECRETSHUB_VERSION}}", "-h"
    repository:
      owner: cyberark
      name: homebrew-tools
    skip_upload: true

release:
  github:
    owner: aharriscybr
    name: terraform-provider-cybr-sh
  draft: false
  replace_existing_artifacts: true

  disable: false

signs:
  - artifacts: checksum